{"version":3,"sources":["assets/music/beeponce.mp3","assets/music/voyagermessage.mp3","pages/Main/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","useState","ativo","setAtivo","exercicios","setExercicios","exerciciosPorSerie","setExerciciosPorSerie","repeticoes","setRepeticoes","series","setSeries","tempo","setTempo","tempoDescanso","setTempoDescanso","tempoExercicio","setTempoExercicio","tempoPreparacao","setTempoPreparacao","descricao","setDescricao","estado","setEstado","mostrarOuNao","setMostrarOuNao","audioPreparar","Audio","beeponce","audioComecar","voyagermessage","iniciarAudio","audio","play","pausarAudio","pause","pararCronometro","useEffect","interval","setInterval","parseInt","clearInterval","className","size","color","onClick","setTimeout","document","getElementById","focus","htmlFor","id","type","value","onChange","e","target","autoFocus","Routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.200cb95d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beeponce.c1b2e89b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/voyagermessage.21436201.mp3\";","import React, { useState, useEffect } from 'react';\r\nimport './styles.scss';\r\nimport beeponce from '../../assets/music/beeponce.mp3';\r\nimport voyagermessage from '../../assets/music/voyagermessage.mp3';\r\nimport { FiMenu, FiPlay, FiSquare, FiPause } from 'react-icons/fi';\r\n\r\nexport default function Main() {\r\n\r\n    const [ativo, setAtivo] = useState(false);\r\n    const [exercicios, setExercicios] = useState(0);\r\n    const [exerciciosPorSerie, setExerciciosPorSerie] = useState(3);\r\n    const [repeticoes, setRepeticoes] = useState(0);\r\n    const [series, setSeries] = useState(5);\r\n    const [tempo, setTempo] = useState(0);\r\n    const [tempoDescanso, setTempoDescanso] = useState(10);\r\n    const [tempoExercicio, setTempoExercicio] = useState(25);\r\n    const [tempoPreparacao, setTempoPreparacao] = useState(3);\r\n    const [descricao, setDescricao] = useState('Vamos começar');\r\n    const [estado, setEstado] = useState('Parado');\r\n    const [mostrarOuNao, setMostrarOuNao] = useState('esconder');\r\n    let audioPreparar = new Audio(beeponce);\r\n    let audioComecar = new Audio(voyagermessage);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (ativo) {\r\n\r\n            interval = setInterval(() => {\r\n                switch (descricao) {\r\n\r\n                    case 'Prepare-se':\r\n                        pausarAudio('audioComecar');\r\n                        if (tempo === parseInt(tempoPreparacao)) {\r\n                            iniciarAudio('audioPreparar');\r\n                            setTempo(0);\r\n                            setDescricao('VALENDOOOOO!');\r\n                            setExercicios(exercicios + 1);\r\n                        } else {\r\n                            setTempo(tempo + 1);\r\n                        }\r\n                        break;\r\n                \r\n                    default:\r\n                        break;\r\n\r\n                    case 'VALENDOOOOO!':\r\n                        pausarAudio('audioPreparar');\r\n                        if (tempo === parseInt(tempoExercicio)) {\r\n                            iniciarAudio('audioComecar');\r\n                            setTempo(0);\r\n\r\n                            if (exercicios === parseInt(exerciciosPorSerie)) {\r\n                                setExercicios(0);\r\n                                setRepeticoes(repeticoes + 1);\r\n                                setDescricao('Descanse');\r\n                            } else {\r\n                                setDescricao('Prepare-se');\r\n                            }\r\n\r\n                        } else {\r\n                            setTempo(tempo + 1);\r\n                        }\r\n                        break;\r\n\r\n                    case 'Descanse':\r\n                        if (repeticoes === parseInt(series)) {\r\n                            setEstado('Parado');\r\n                            setDescricao('PARABÉNS! TREINO CONCLUÍDO');\r\n                            setAtivo(false);\r\n                            setTempo(0);\r\n                        } else {\r\n                            if (tempo === parseInt(tempoDescanso)) {\r\n                                setTempo(0);\r\n                                setDescricao('Prepare-se');\r\n                            } else {\r\n                                setTempo(tempo + 1);\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }, 1000);\r\n            \r\n        } else {\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    // eslint-disable-next-line\r\n    }, [ativo, tempo]);\r\n\r\n    function iniciarAudio (audio) {\r\n        audio === 'audioComear' ? audioComecar.play() : audioPreparar.play();\r\n    };\r\n\r\n    function pausarAudio (audio) {\r\n        audio === 'audioComear' ? audioComecar.pause() : audioPreparar.pause();\r\n    };\r\n\r\n    function iniciarCronometro() {\r\n        if (!parseInt(tempoExercicio) > 0 || !parseInt(tempoDescanso) > 0 || !parseInt(tempoPreparacao) > 0 || !parseInt(exerciciosPorSerie) > 0 || !parseInt(series) > 0) {\r\n            return;\r\n        }\r\n        setMostrarOuNao('esconder');\r\n        setDescricao('Prepare-se');\r\n        setEstado('Rodando');\r\n        setAtivo(true);\r\n    };\r\n\r\n    function pausarCronometro() {\r\n        setEstado('Pausado');\r\n        setAtivo(false);\r\n    };\r\n\r\n    function pararCronometro() {\r\n        setEstado('Parado');\r\n        setDescricao('Vamos começar');\r\n        setAtivo(false);\r\n        zerarTudo();\r\n    };\r\n\r\n    function zerarTudo() {\r\n        setTempo(0);\r\n        setExercicios(0);\r\n        setRepeticoes(0);\r\n    }\r\n\r\n    function toggleMenu() {\r\n        if (estado === 'Pausado' || ativo) {\r\n            return;\r\n        }\r\n         if (mostrarOuNao === '') {\r\n            setMostrarOuNao('esconder');\r\n         } else {\r\n            setMostrarOuNao('');\r\n            setTimeout(() => { document.getElementById('tempoExercicioInput').focus(); }, 400);\r\n         }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <FiMenu size={25} color=\"#fff\" onClick={() => toggleMenu()} />\r\n                <div className={`form ${mostrarOuNao}`}>\r\n                    <div>\r\n                        <label htmlFor=\"tempoExercicioInput\">Tempo dos exercícios</label>\r\n                        <input id=\"tempoExercicioInput\" type=\"number\" value={tempoExercicio} onChange={e => setTempoExercicio(e.target.value)} autoFocus />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"tempoDescansoInput\">Tempo de descanso</label>\r\n                        <input id=\"tempoDescansoInput\" type=\"number\" value={tempoDescanso} onChange={e => setTempoDescanso(e.target.value)} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"tempoPreparacaoInput\">Tempo de preparação</label>\r\n                        <input id=\"tempoPreparacaoInput\" type=\"number\" value={tempoPreparacao} onChange={e => setTempoPreparacao(e.target.value)} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"exerciciosPorSerieInput\">Exercícios por série</label>\r\n                        <input id=\"exerciciosPorSerieInput\" type=\"number\" value={exerciciosPorSerie} onChange={e => setExerciciosPorSerie(e.target.value)} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"seriesInput\">Quantidade de séries</label>\r\n                        <input id=\"seriesInput\" type=\"number\" value={series} onChange={e => setSeries(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n\r\n                { estado === 'Parado' || estado === 'Pausado' \r\n                    ? <FiPlay size={25} color=\"#fff\" onClick={ () => iniciarCronometro() } /> \r\n                    : <FiPause size={25} color=\"#fff\" onClick={ () => pausarCronometro() } /> \r\n                }\r\n\r\n                { estado === 'Pausado' || ativo\r\n                    ? <FiSquare size={25} color=\"#fff\" onClick={ () => pararCronometro() } />\r\n                    : <div className=\"divVazia\"></div>\r\n                }\r\n            </header>\r\n\r\n            <div className=\"main-content\">\r\n                <h3>{ tempo < 10 ? `0${tempo}` : tempo }</h3>\r\n                <p>{descricao}</p>\r\n                <p>Séries concluídas: {repeticoes}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Main} />\r\n                <Route path=\"/main\" component={Main} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\nimport Routes from './routes';\nimport './App.scss';\n\nfunction App() {\n    return (\n        <>\n            <Routes />\n        </>\n    )    \n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//Service worker para funcionar o PWA\nserviceWorker.unregister();"],"sourceRoot":""}